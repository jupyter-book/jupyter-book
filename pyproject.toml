[build-system]
requires = ["hatchling", "hatch-nodejs-version", "hatch-deps-selector"]
build-backend = "hatchling.build"

[project]
name = "jupyter-book"

classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup",
]

requires-python = ">=3.9"
dynamic = ["version", "description", "authors", "urls", "keywords", "license"]
dependencies = [
  # Ensure that `jupyter book` works`
  "jupyter-core",
  # Ensure that kernels are found out of the box
  # This is not required, but is a nice-to-have
  "jupyter-server",
  # ipykernel is commonly used 
  # This is not required, but is a nice-to-have
  "ipykernel",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.scripts]
jupyter-book = "jupyter_book.__main__:main"

[tool.hatch.build.hooks.selector]
default-variant = "pypi"
# Name of the env-var that controls which `selector.variants` entry
# is used
env-var = "JUPYTER_BOOK_PACKAGE_VARIANT"

# Ensure that we only bring in nodeenv for PyPI
[tool.hatch.build.hooks.selector.variants.pypi]
dependencies = [
  "platformdirs~=4.2.2",
  "nodeenv~=1.9.1"
]

# Conda-forge has no additional dependencies to the `project.dependencies`
# This section is not needed (the env-var can be set to "")
# But this makes it more explicit
[tool.hatch.build.hooks.selector.variants.conda-forge]
dependencies = []

[tool.hatch.version]
source = "nodejs"

[tool.hatch.build.hooks.jupyter-builder]
dependencies = ["hatch-jupyter-builder"]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = ["py/jupyter_book/dist/jupyter-book.cjs"]
skip-if-exists = ["py/jupyter_book/dist/jupyter-book.cjs"]

[tool.hatch.build.targets.wheel]
packages = ["py/jupyter_book"]
artifacts = [
    "/py/jupyter_book/dist/jupyter-book.cjs"
]

[tool.hatch.build.targets.sdist]
artifacts = [
    "/package.json",
    "/py/jupyter_book/dist/jupyter-book.cjs"
]

[tool.hatch.build.hooks.version]
path = "py/jupyter_book/__main__.py"
pattern = true

# Use Hatch to version the project from Jupyter Releaser
[tool.jupyter-releaser.options]
version_cmd = "hatch version"

[tool.jupyter-releaser.hooks]
before-build-npm = [
    "npm install",
    "npm run build"
]
before-build-python = ["npm install", "npm run clean"]
